# @package _global_

data:
  name: clevr
  resolution: 224
  channels: 3
  batch_size: 128
  patch_size: 16
  str_patch_size:  ${convert_str:${data.patch_size}}
  mean: 
    _target_: torch.tensor
    data: 
      _target_: numpy.load
      file: 
  std: 
    _target_: torch.tensor
    data: 
      _target_: numpy.load
      file: 
  classes: 10

datasets:
  train:
    _target_: CLEVRCustomDataset
    root: ${base_data_home}/CLEVR_v1.0/images/train
    transform: ${transformation.train}
    train: True

  val:
    _target_: CLEVRCustomDataset
    root: ${base_data_home}/CLEVR_v1.0/images/validation
    transform: ${transformation.val}

  test:
    _target_: CLEVRCustomDataset
    root: ${base_data_home}/CLEVR_v1.0/images/test
    transform: ${transformation.val}

datamodule: 
  _target_: dataset.dataloader.DataModule
  batch_size: ${data.batch_size}
  num_workers: 8
  classes: ${data.classes}
  channels: ${data.channels}
  resolution: ${data.resolution}

datamodule_eval:
  _target_: dataset.dataloader.DataModule
  batch_size: ${data.batch_size}
  num_workers: ${datamodule.num_workers}
  classes: ${data.classes}
  channels: ${data.channels}
  resolution: ${data.resolution}

extradata:
  pcamodule:
    _target_ : numpy.load
    file: 

  eigenratiomodule:
    _target_: numpy.load
    file: 

